# Build:
#  docker build . -t d8z-cloud-container
# Run:
#  Edit/Debug: docker run -it --rm --env-file .env -v .:/work d8z-cloud-container bash
#  Git Command: docker run -it --rm --env-file .env d8z-cloud-container <command>
# DinD:
#  docker run -it --rm --env-file .env -v /var/run/docker.sock:/var/run/docker.sock -v .:/work d8z-cloud-container bash

# We always use ubuntu to start.
FROM ubuntu:latest

# Install necessary dependencies
RUN apt-get update
RUN apt-get install -y \
     	bash \
	curl \
	dos2unix \
	emacs \
	git \
	jq \
	openssh-client \
	coreutils

RUN apt-get install -y \
	apt-transport-https \
    	ca-certificates \
    	gnupg \
    	lsb-release


# Lets Run Docker in Docker, so we can launch the vnc.

# Add Docker's official GPG key
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

# Set up the stable Docker repository
RUN echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

# Update package lists again after adding the Docker repository
RUN apt-get update

# Install Docker CLI
RUN apt-get install -y --no-install-recommends docker-ce docker-ce-cli containerd.io

# Install docker-compose
RUN apt-get install -y --no-install-recommends docker-compose

# Clean up unnecessary packages
RUN apt-get autoremove -y && apt-get clean

RUN rm -rf /var/lib/apt/lists/*

# Create a working directory
WORKDIR /

# Copy the source code from the project directory.
COPY ./ /src
RUN rm /src/.env

# Copy scripts and ensure they are executable
COPY entrypoint.sh /src/entrypoint.sh
RUN chmod +x /src/entrypoint.sh
RUN dos2unix /src/entrypoint.sh

# Set the entrypoint
ENTRYPOINT ["/src/entrypoint.sh"]
